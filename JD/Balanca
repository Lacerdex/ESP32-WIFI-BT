#include <HX711.h>
#include <WiFi.h>
#include <HTTPClient.h>

//Usamos um modulo de HX711 para conexão Esp32 <-> Balança.
//Apenas um modelo base para futuros projetos envolvendo balanças.

// Defina os pinos do HX711
#define DOUT 19  // Pino de Data
#define SCK 18   // Pino de Clock

//Pinos das leds
#define PINO_VERDE 2

String ID = "kit_01";

const char* urlServer = "http://192.168.0.106:3000";
const char* nomeWifi = ";P";
const char* senhaWifi = "14012022";


#define pesoMin 0.030
#define pesoMax 20.0

#define escala 63600.f

HX711 balanca;
float medida = 0;

void setup() {
  Serial.begin(115200);

  conectarWifi();

  // Inicializa a balança
  balanca.begin(DOUT, SCK);
  Serial.println("Inicializando a balança...");
  balanca.set_scale(escala);

  delay(2000);

  // Tarar a balança (zerar o peso)
  balanca.tare();
  Serial.println("Balança zerada.");
}

void loop() {
  verificarWifi();
  // Ler o peso bruto
  medida = balanca.get_units(3);
  delay(2000);
  if ( medida >= pesoMax) {
    Serial.println("Medida muito alta!");
  } else {
    Serial.println(medida, 3);
  }
  enviarDadosParaServidor(ID, medida);

  if (Serial.available()) {
    Serial.println("Para zerar a balança, digite 'T'.");
    char temp = Serial.read();
    if (temp == 't') zerarBalanca();
    Serial.println("Balança zerada:");

  }

  delay(2000);
}

void conectarWifi() {
  WiFi.begin(nomeWifi, senhaWifi);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Tentando conectar ao WiFi...");
  }
  Serial.print("Conectado à Internet");
}

void verificarWifi() {
  if (WiFi.status() != WL_CONNECTED)
    Serial.print("WiFi desconectado!\nTentando reconectar...\n");

  while (WiFi.status() != WL_CONNECTED) {
    conectarWifi();
  }
}

void zerarBalanca () {
  Serial.println();
  balanca.tare();
  Serial.println("Balança Zerada");
}

void enviarDadosParaServidor(String ID, float medida) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(urlServer);

    String payload = "ID: " + String(ID);
    payload += "&Peso em kilogramas: " + String(medida);

    http.addHeader("Content-Type", "application/x-www-form-urlencoded");

    // Tenta enviar os dados para o servidor até 5 vezes
    for (int tentativa = 0; tentativa < 10; tentativa++) {
      int httpResponseCode = http.POST(payload);

      if (httpResponseCode > 0) {
        String response = http.getString();
        Serial.printf("Resposta do servidor: %s\n", response.c_str());
        break;  // Sai do loop se a solicitação foi bem-sucedida
      } else {
        Serial.printf("Erro na solicitação HTTP (tentativa %d): %d\n", tentativa + 1, httpResponseCode);
      }
    }
    http.end();
  } else {
    Serial.println("Erro: Não conectado ao WiFi");
  }
}
